from ..board import Player
from ..card.Mech import Pupbot, HolyMecherel, DeflectoBot
from ..card.Elemental import (
    Sellemental,
    RefreshingAnomaly,
    CracklingCyclone,
    WaterDroplet,
    RecyclingWraith,
    WildfireElemental,
    StasisElemental,
    MoltenRock,
    Smogger,
    PartyElemental,
)
from ..card.Dragon import EvolvingChromawing, CobaltScalebane, RazorgoreTheUntamed
from ..card.Murloc import (
    MurlocTidehunter,
    OldMurkEye,
    SaltscaleHoncho,
    RockpoolHunter,
    SISefin,
)
from ..card.Neutral import (
    MenagerieMug,
    WhelpSmuggler,
    SpawnofNZoth,
    DeadlySpore,
    ArchdruidHamuul,
    Khadgar,
)
from ..card.Quilboar import Roadboar

# The example is generated by Portia Twitch Streaming.
# 21.09.05 15:25 ~ 15:41 Battleground History


class PortiaTurn1(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing(),
        ]
        self.tier = 1
        self.health = 40


class OppoTurn1(Player):
    def __init__(self):
        self.card_list = [
            Sellemental(),
        ]
        self.tier = 1
        self.health = 40


class PortiaTurn2(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing().set_ability(2, 3),
        ]
        self.tier = 2
        self.health = 40


class OppoTurn2(Player):
    def __init__(self):
        self.card_list = [
            RefreshingAnomaly(),
        ]
        self.tier = 2
        self.health = 40


class PortiaTurn3(Player):
    def __init__(self):
        self.card_list = [
            SaltscaleHoncho(),
            EvolvingChromawing().set_ability(2, 3),
        ]
        self.tier = 2
        self.health = 40


class OppoTurn3(Player):
    def __init__(self):
        self.card_list = [
            OldMurkEye(),
            MurlocTidehunter(),
            RefreshingAnomaly(),
        ]
        self.tier = 2
        self.health = 40


class PortiaTurn4(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing().set_ability(5, 12),
            SaltscaleHoncho().set_ability(4, 3),
            MenagerieMug(),
            WhelpSmuggler(),
        ]
        self.tier = 2
        self.health = 40


class OppoTurn4(Player):
    def __init__(self):
        self.card_list = [
            CracklingCyclone(),
            WaterDroplet().set_ability(5, 5),
            RecyclingWraith(),
        ]
        self.tier = 3
        self.health = 40


class PortiaTurn5(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing().set_ability(10, 14),
            SaltscaleHoncho().set_ability(4, 3),
            MenagerieMug(),
            WhelpSmuggler(),
            EvolvingChromawing().set_ability(2, 5),
        ]
        self.tier = 3
        self.health = 40


class OppoTurn5(Player):
    def __init__(self):
        self.card_list = [
            SpawnofNZoth(),
            Roadboar().set_ability(4, 7),
            SaltscaleHoncho().set_ability(5, 4),
            Pupbot().set_ability(4, 3),
            RockpoolHunter().set_ability(2, 3),
        ]
        self.tier = 3
        self.health = 40


class PortiaTurn6(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing().set_ability(10, 14),
            SaltscaleHoncho().set_ability(4, 3),
            MenagerieMug(),
            Khadgar(),
            WhelpSmuggler(),
            EvolvingChromawing().set_ability(2, 5),
        ]
        self.tier = 3
        self.health = 40


class OppoTurn6(Player):
    def __init__(self):
        self.card_list = [
            PartyElemental().set_ability(14, 12),
            WaterDroplet().set_ability(7, 7),
            Smogger().set_ability(5, 5),
            DeflectoBot(),
            RockpoolHunter(),
            MoltenRock().set_ability(7, 14),
        ]
        self.tier = 3
        self.health = 40


class PortiaTurn9(Player):
    def __init__(self):
        self.card_list = [
            SISefin().set_ability(5, 7, poison=True),
            EvolvingChromawing().set_ability(40, 18),
            EvolvingChromawing().set_ability(14, 11),
            RazorgoreTheUntamed().set_ability(15, 17),
            CobaltScalebane(),
            CobaltScalebane(),
            WhelpSmuggler(),
        ]
        self.tier = 5
        self.health = 40


class OppoTurn9(Player):
    def __init__(self):
        self.card_list = [
            PartyElemental().set_ability(16, 14),
            WaterDroplet().set_ability(15, 15),
            CracklingCyclone().set_ability(5, 2),
            StasisElemental().set_ability(5, 5),
            MoltenRock().set_ability(4, 12),
            MoltenRock().set_ability(6, 13),
            MoltenRock().set_ability(15, 45),
        ]
        self.tier = 3
        self.health = 40


class PortiaTurn10(Player):
    def __init__(self):
        self.card_list = [
            EvolvingChromawing().set_ability(86, 22),
            EvolvingChromawing().set_ability(28, 13),
            RazorgoreTheUntamed().set_ability(19, 23),
            CobaltScalebane().set_ability(10, 10),
            ArchdruidHamuul(),
            WhelpSmuggler(),
        ]
        self.tier = 6
        self.health = 40


class OppoTurn10(Player):
    def __init__(self):
        self.card_list = [
            DeadlySpore(),
            CracklingCyclone().set_ability(21, 15),
            HolyMecherel(),
            WildfireElemental().set_ability(8, 5),
            WildfireElemental(),
            RecyclingWraith().set_ability(8, 10),
            RecyclingWraith().set_ability(4, 4),
        ]
        self.tier = 5
        self.health = 40
